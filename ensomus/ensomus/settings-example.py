# Django settings for ensomus project.import os.pathfrom django.utils.translation import ugettext_lazy as _DEBUG = TrueTEMPLATE_DEBUG = DEBUGALLOWED_HOSTS = ['*']ADMINS = (    # ('Johs Kristoffersen', 'johsbk@gmail.com'),    ('Tim Lund', 'tl@t3cms.dk'),)MANAGERS = ADMINSDATABASES = {    'default': {        'ENGINE': 'django.db.backends.mysql',        # 'NAME': 'nxtlvl',        # 'USER': 'nxtlvl',        # 'PASSWORD': 'FrynJap9',    }}DEFAULT_FROM_MAIL = 'test@example.com'# Make this unique, and don't share it with anybody.SECRET_KEY = '--TzKu!2l71.Ayd<$Ym:#.}ZK]*H*qV`m4\isO?@2)R5G9fG*n5[ZEM(C\*B]$*'# Local time zone for this installation. Choices can be found here:# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name# although not all choices may be available on all operating systems.# In a Windows environment this must be set to your system time zone.TIME_ZONE = 'Europe/Copenhagen'# Language code for this installation. All choices can be found here:# http://www.i18nguy.com/unicode/language-identifiers.htmlLANGUAGE_CODE = 'da'LANGUAGES = (    ('da', _('Danish')),    ('en', _('English')))SITE_ID = 1# If you set this to False, Django will make some optimizations so as not# to load the internationalization machinery.USE_I18N = True# If you set this to False, Django will not format dates, numbers and# calendars according to the current locale.USE_L10N = True# If you set this to False, Django will not use timezone-aware datetimes.USE_TZ = TruePROJECT_DIR = os.path.dirname(__file__)FILES_ROOT = os.path.join(PROJECT_DIR, 'files')# Absolute filesystem path to the directory that will hold user-uploaded files.# Example: "/home/media/media.lawrence.com/media/"MEDIA_ROOT = os.path.join(PROJECT_DIR, 'media')# URL that handles the media served from MEDIA_ROOT. Make sure to use a# trailing slash.# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"MEDIA_URL = ''# Absolute path to the directory static files should be collected to.# Don't put anything in this directory yourself; store your static files# in apps' "static/" subdirectories and in STATICFILES_DIRS.# Example: "/home/media/media.lawrence.com/static/"STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')# URL prefix for static files.# Example: "http://media.lawrence.com/static/"STATIC_URL = '/static/'# Additional locations of static filesSTATICFILES_DIRS = (    # Put strings here, like "/home/html/static" or "C:/www/django/static".    # Always use forward slashes, even on Windows.    # Don't forget to use absolute paths, not relative paths.    # os.path.join(PROJECT_DIR, 'static'),)# List of finder classes that know how to find static files in# various locations.STATICFILES_FINDERS = (    'django.contrib.staticfiles.finders.FileSystemFinder',    'django.contrib.staticfiles.finders.AppDirectoriesFinder',    # 'django.contrib.staticfiles.finders.DefaultStorageFinder',    'compressor.finders.CompressorFinder',)# List of callables that know how to import templates from various sources.TEMPLATE_LOADERS = (    'django.template.loaders.filesystem.Loader',    'django.template.loaders.app_directories.Loader',    # 'django.template.loaders.eggs.Loader',)TEMPLATE_CONTEXT_PROCESSORS = (    "django.contrib.auth.context_processors.auth",    "django.core.context_processors.debug",    "django.core.context_processors.i18n",    "django.core.context_processors.media",    "django.core.context_processors.static",    "django.contrib.messages.context_processors.messages",    'django.core.context_processors.request')MIDDLEWARE_CLASSES = (    'django.contrib.sessions.middleware.SessionMiddleware',    'django.middleware.common.CommonMiddleware',    'django.middleware.locale.LocaleMiddleware',    'django.middleware.csrf.CsrfViewMiddleware',    'django.contrib.auth.middleware.AuthenticationMiddleware',    'django.contrib.messages.middleware.MessageMiddleware',    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',    'firepython.middleware.FirePythonDjango',    'threadlocals.middleware.ThreadLocalMiddleware',    # Uncomment the next line for simple clickjacking protection:    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',)ROOT_URLCONF = 'ensomus.urls'# Python dotted path to the WSGI application used by Django's runserver.WSGI_APPLICATION = 'ensomus.wsgi.application'TEMPLATE_DIRS = (    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".    # Always use forward slashes, even on Windows.    # Don't forget to use absolute paths, not relative paths.    os.path.join(PROJECT_DIR, 'templates'),)LOCALE_PATHS = (    os.path.join(PROJECT_DIR, 'locale'),)INSTALLED_APPS = (    'django.contrib.auth',    'django.contrib.contenttypes',    'django.contrib.sessions',    'django.contrib.sites',    'django.contrib.messages',    'django.contrib.staticfiles',    'django.contrib.flatpages',    # Uncomment the next line to enable the admin:    # 'django_admin_bootstrapped.bootstrap3',    'bootstrap3',    'django_admin_bootstrapped',    'django.contrib.admin',    'debug_toolbar',    # Uncomment the next line to enable admin documentation:    # 'django.contrib.admindocs',    'widget_tweaks',    'activelink',    'tinymce',    'mail_templated',    'django_mailer_plus',    'compressor',    'ensomus.apps.mus',)# A sample logging configuration. The only tangible logging# performed by this configuration is to send an email to# the site admins on every HTTP 500 error when DEBUG=False.# See http://docs.djangoproject.com/en/dev/topics/logging for# more details on how to customize your logging configuration.LOGGING = {    'version': 1,    'disable_existing_loggers': False,    'formatters': {        'verbose': {            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'        },        'simple': {            'format': '%(levelname)s %(message)s'        },    },    'filters': {        'require_debug_false': {            '()': 'django.utils.log.RequireDebugFalse'        }    },    'handlers': {        'mail_admins': {            'level': 'ERROR',            'filters': ['require_debug_false'],            'class': 'django.utils.log.AdminEmailHandler',            'formatter': 'verbose'        },        'console': {            # logging handler that outputs log messages to terminal            'class': 'logging.StreamHandler',            'level': 'DEBUG',  # message level to be written to console            'formatter': 'verbose'        },        'file': {            'class': 'logging.FileHandler',            'filename': os.path.join(PROJECT_DIR, 'log', 'app.log'),            'level': 'DEBUG',            'formatter': 'verbose'        },    },    'loggers': {        'django.request': {            'handlers': ['console'],            'level': 'ERROR',            'propagate': True,        },        'django_mailer_plus': {            'handlers': ['console'],            'level': 'ERROR',            'propagate': True,        },        'ho.pisa': {            'handlers': ['console'],            'level': 'ERROR',            'propagate': True,        },        'django.db': {            'handlers': ['console'],            'level': 'ERROR',            'propagate': True,        },        'ensomus.apps.mus': {            'handlers': ['file'],            'level': 'WARNING',            'propagate': True,        },        # 'django.db': {        # 'handlers': ['console'],        #     'level' : 'DEBUG'        # },    }}LOGIN_URL = '/login/'# GROUPS = {#        {'name': 'Enso-bruger', 'rank': 1},#        {'name': 'Firma-superbruger', 'rank': 2},#        {'name': 'Leder', 'rank': 3},#        {'name': 'Medarbejder', 'rank': 4}#}# TinyMCETINYMCE_COMPRESSOR = FalseTINYMCE_DEFAULT_CONFIG = {    'theme': "advanced",}TINYMCE_JS_URL = '/static/js/tiny_mce/tiny_mce.js'# Parse database configuration from $DATABASE_URLimport dj_database_urlDATABASES['default'] = dj_database_url.config()# EMAIL_HOST = ''## EMAIL_HOST_USER = ''## EMAIL_HOST_PASSWORD = ''## EMAIL_PORT = 587# EMAIL_HOST = 'smtp.webfaction.com'# EMAIL_HOST_USER = 'enso'# EMAIL_HOST_PASSWORD = 'hsi(8ujIKl'# EMAIL_PORT = 587## SERVER_EMAIL = DEFAULT_FROM_MAIL## DEFAULT_FROM_EMAIL = DEFAULT_FROM_MAILEMAIL_USE_TLS = TrueEMAIL_HOST = 'smtp.gmail.com'DEFAULT_FROM_EMAIL = 'kharenko.send.mail@gmail.com'EMAIL_HOST_USER = 'kharenko.send.mail@gmail.com'EMAIL_HOST_PASSWORD = '^Work1029Send$'EMAIL_PORT = 587EMAIL_TIMEOUT = 300# SESSION_COOKIE_SECURE = True# CSRF_COOKIE_SECURE = True# Honor the 'X-Forwarded-Proto' header for request.is_secure()SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')# This is only used where it's absolutely needed, like pdf templates.SITE_URL = 'http://localhost:8000'